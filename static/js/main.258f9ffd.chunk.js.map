{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","useState","slidesMoveLength","setSlidesMoveLength","prevButtonDisabled","setPrevButtonDisabled","nextButtonDisabled","setNextButtonDisabled","handleSlide","type","maxWidth","length","slidesFrameWidth","val","className","cn","disabled","onClick","style","width","transform","transition","map","image","index","height","src","alt","String","App","state","infinite","handleWidth","event","setState","currentTarget","value","handleFrameSize","handleStep","handleAnimationDuration","handleInfinite","checked","this","htmlFor","id","onChange","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.258f9ffd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  itemWidth: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  // infinite: boolean\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  // infinite,\n}) => {\n  const [slidesMoveLength, setSlidesMoveLength] = useState(0);\n  const [prevButtonDisabled, setPrevButtonDisabled] = useState(true);\n  const [nextButtonDisabled, setNextButtonDisabled] = useState(false);\n\n  function handleSlide(type: string): void {\n    const maxWidth = images.length * itemWidth;\n    const slidesFrameWidth = itemWidth * frameSize;\n\n    if (prevButtonDisabled) {\n      setPrevButtonDisabled(false);\n    }\n\n    if (nextButtonDisabled) {\n      setNextButtonDisabled(false);\n    }\n\n    if (type === 'prev') {\n      setSlidesMoveLength(val => {\n        const length = val + itemWidth * step;\n\n        if (length >= 0) {\n          setPrevButtonDisabled(true);\n\n          return 0;\n        }\n\n        return length;\n      });\n    }\n\n    if (type === 'next') {\n      setSlidesMoveLength(val => {\n        const length = val - itemWidth * step;\n\n        if ((slidesFrameWidth + -length) >= maxWidth) {\n          setNextButtonDisabled(true);\n\n          return slidesFrameWidth - maxWidth;\n        }\n\n        return length;\n      });\n    }\n  }\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        type=\"button\"\n        className={cn('Carousel__button', { disabled: prevButtonDisabled })}\n        onClick={() => handleSlide('prev')}\n      >\n        {'<'}\n      </button>\n\n      <div\n        className=\"Carousel__container\"\n        style={{ width: `${itemWidth * frameSize}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${slidesMoveLength}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              className=\"Carousel__list-item\"\n              key={image}\n              style={{ height: `${itemWidth}px` }}\n            >\n              <img\n                className=\"Carousel__list-img\"\n                src={image}\n                alt={String(index)}\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <button\n        data-cy=\"next\"\n        type=\"button\"\n        className={cn('Carousel__button', { disabled: nextButtonDisabled })}\n        onClick={() => handleSlide('next')}\n      >\n        {'>'}\n      </button>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleWidth = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ itemWidth: +event.currentTarget.value });\n  };\n\n  handleFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ frameSize: +event.currentTarget.value });\n  };\n\n  handleStep = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ step: +event.currentTarget.value });\n  };\n\n  handleAnimationDuration = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ animationDuration: +event.currentTarget.value });\n  };\n\n  handleInfinite = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ infinite: event.currentTarget.checked });\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <form className=\"App__form\">\n          <label htmlFor=\"itemId\">\n            Slide width:\n            <input\n              type=\"number\"\n              id=\"itemId\"\n              value={itemWidth}\n              onChange={this.handleWidth}\n            />\n          </label>\n\n          <label htmlFor=\"frameId\">\n            Frame size:\n            <input\n              type=\"number\"\n              id=\"frameId\"\n              value={frameSize}\n              onChange={this.handleFrameSize}\n            />\n          </label>\n\n          <label htmlFor=\"stepId\">\n            Step:\n            <input\n              type=\"number\"\n              id=\"stepId\"\n              value={step}\n              onChange={this.handleStep}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\">\n            Animation Duration:\n            <input\n              type=\"number\"\n              id=\"animationDuration\"\n              value={animationDuration}\n              onChange={this.handleAnimationDuration}\n            />\n          </label>\n\n          <label>\n            Infinite:\n            <input\n              type=\"checkbox\"\n              checked={infinite}\n              onChange={this.handleInfinite}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          // infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}